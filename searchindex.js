Search.setIndex({"docnames": ["RegexRiot/BasicExpressions", "RegexRiot/RiotString", "RegexRiot/index", "devlog", "index", "tests/index", "tests/operations", "tests/regextutorials", "tests/symbols", "tryitout/floating_point_numbers", "tryitout/index", "tryitout/years_before_1990"], "filenames": ["RegexRiot/BasicExpressions.rst", "RegexRiot/RiotString.rst", "RegexRiot/index.rst", "devlog.rst", "index.rst", "tests/index.rst", "tests/operations.rst", "tests/regextutorials.rst", "tests/symbols.rst", "tryitout/floating_point_numbers.rst", "tryitout/index.rst", "tryitout/years_before_1990.rst"], "titles": ["Basic Expressions", "RiotString", "RegexRiot", "Devlog", "RegexRiot", "Test sets", "Operations", "RegexTutorials", "Symbols", "Floating point numbers", "Try it out", "Years before 1990"], "terms": {"regexriot": [0, 1, 10], "come": 0, "few": [0, 4], "you": [0, 10], "can": [0, 1, 4, 10], "us": [0, 1, 2, 3, 4, 10], "individu": 0, "build": [0, 1, 2, 10], "block": 0, "your": [0, 10], "regex": [0, 1, 2, 3, 4, 10], "_basic_express": 0, "alphanum": [0, 2, 10], "riotstr": [0, 2, 6], "w": 0, "match": [0, 6, 7, 9, 11], "ani": [0, 10], "alphanumer": 0, "charact": 0, "anyth": [0, 2, 10, 11], "digit": [0, 1, 2, 9, 10, 11], "begin": [0, 2, 10], "line": 0, "boundari": [0, 2, 10], "b": [0, 1], "posit": 0, "close_parenthesi": [0, 2, 10], "close": 0, "round": 0, "parenthesi": 0, "d": [0, 1], "dot": [0, 1, 2, 9, 10], "end": [0, 2, 10], "non_alphanum": [0, 2, 10], "non": 0, "non_boundari": [0, 2, 10], "non_digit": [0, 2, 10], "non_spac": [0, 2], "": [0, 1, 2, 7], "space": [0, 2, 10], "open_parenthesi": [0, 2, 10, 11], "an": 0, "open": 0, "ar": [1, 3, 5, 6, 7], "how": 1, "i": [1, 2, 3, 7, 10], "repres": 1, "thi": [1, 3, 7, 10], "librari": [1, 10], "class": [1, 6, 7, 8], "_riot": 1, "riotset": [1, 2], "arg": 1, "none": 1, "combin": 1, "unit": 1, "object": 1, "hold": 1, "mutat": 1, "regular": 1, "express": [1, 2], "compos": 1, "togeth": [1, 2, 10], "more": [1, 10], "complic": [1, 2, 10], "For": 1, "instanc": 1, "built": 1, "one_or_mor": [1, 2, 9, 10, 11], "although": 1, "consic": 1, "write": 1, "itself": 1, "help": 1, "autocomplet": 1, "easier": 1, "chain": [1, 2], "function": 1, "call": 1, "read": [1, 4], "out": [1, 2], "english": 1, "like": [1, 2, 10], "text": 1, "compil": [1, 2], "pattern": 1, "return": [1, 7], "result": 1, "re": 1, "The": [1, 2, 7], "current": 1, "repeat": 1, "one": 1, "time": [1, 10], "so": [1, 2, 3, 10], "r": 1, "follow": [1, 10], "next": 1, "ab": 1, "string": 1, "self": 1, "riot": [1, 2, 11], "seed": 1, "simplifi": 1, "interfac": 1, "start": 2, "import": 2, "its": [2, 4], "content": 2, "from": [2, 10], "rr": 2, "method": [2, 10], "simpl": [2, 4, 10], "modifi": [2, 10], "them": [2, 10], "desir": 2, "try": 2, "some": [2, 10], "basic": 2, "There": 3, "now": 3, "rudementrari": 3, "set": [3, 6], "z": 3, "13579": 3, "clear": 3, "exercis": [3, 4, 7, 10], "A": [3, 4], "made": 3, "new": 3, "version": 3, "becaus": 3, "couldn": 3, "t": [3, 7, 9], "edit": 3, "descript": 3, "project": 3, "pypi": 3, "org": 3, "wa": 3, "first": 3, "easi": 4, "maker": 4, "see": 4, "effect": 4, "against": 4, "_": 4, "_regex": 4, "tryitout": 4, "floating_point_numb": 4, "html": [4, 7], "pip": 4, "index": [4, 7], "modul": 4, "search": 4, "page": [4, 10], "These": [5, 6, 7], "case": 5, "auto": 5, "github": 5, "action": 5, "oper": 5, "riotoperationsstr": [5, 6], "test_one_or_mor": [5, 6], "test_one_or_more_around_then": [5, 6], "test_then": [5, 6], "regextutori": 5, "test_floating_point_numb": [5, 7], "test_hexadecimal_color": [5, 7], "test_years_before_1990": [5, 7], "symbol": 5, "literalsstringvaluetest": [5, 8], "test_alphanum": [5, 8], "test_anyth": [5, 8], "test_begining_and_end": [5, 8], "test_boundari": [5, 8], "test_custom_str": [5, 8], "test_digit": [5, 8], "test_dot": [5, 8], "test_round_parenthes": [5, 8], "test_spac": [5, 8], "test": [6, 7, 8], "test_oper": 6, "methodnam": [6, 7, 8], "runtest": [6, 7, 8], "check": 6, "form": 6, "correctli": 6, "anoth": 6, "wheter": 6, "base": 7, "found": 7, "http": 7, "com": 7, "test_regextutori": 7, "1": [7, 11], "excercis": [7, 10], "float": 7, "20point": 7, "20number": 7, "number": 7, "contain": [7, 9], "point": 7, "skip": [7, 9], "those": [7, 9], "don": [7, 9], "speed": 7, "light": 7, "vacuum": 7, "299792458": 7, "m": [7, 10], "standard": 7, "atmospher": 7, "101325": 7, "pa": 7, "earth": 7, "sun": 7, "distanc": 7, "149600000": 7, "km": 7, "acceler": 7, "graviti": 7, "9": 7, "80665": 7, "2": 7, "circumfer": 7, "diamet": 7, "ratio": 7, "3": 7, "141592": 7, "ga": 7, "constant": 7, "8": [7, 11], "3144621": 7, "j": 7, "mol": 7, "k": 7, "hexadecim": 7, "20color": 7, "24": 7, "bit": 7, "color": 7, "12": 7, "aliceblu": 7, "f0f8ff": 7, "antiquewhit": 7, "faebd7": 7, "aqua": 7, "00ffff": 7, "aquamarin": 7, "7fffd4": 7, "azur": 7, "f0ffff": 7, "white": 7, "fff": 7, "red": 7, "f00": 7, "green": 7, "0f0": 7, "blue": 7, "00f": 7, "year": 7, "20befor": 7, "201990": 7, "titl": [7, 11], "all": [7, 11], "film": [7, 11], "produc": [7, 11], "befor": 7, "1990": 7, "shawshank": 7, "redempt": 7, "1994": 7, "godfath": 7, "1972": 7, "part": 7, "ii": 7, "1974": 7, "4": 7, "pulp": 7, "fiction": 7, "5": 7, "good": 7, "bad": 7, "ugli": 7, "1966": 7, "6": 7, "dark": 7, "knight": 7, "2008": 7, "7": 7, "angri": 7, "men": 7, "1957": 7, "schindler": 7, "list": 7, "1993": 7, "lord": 7, "ring": 7, "king": 7, "2003": 7, "10": 7, "fight": 7, "club": 7, "1999": 7, "test_symbol": 8, "pass": [9, 11], "riotexpress": [9, 10, 11], "qfloatingpointnumb": 9, "answer": [9, 11], "promis": 10, "ll": 10, "press": 10, "button": 10, "hit": 10, "shift": 10, "enter": 10, "run": 10, "code": 10, "give": 10, "slew": 10, "which": 10, "onc": 10, "have": 10, "still": 10, "develop": 10, "expect": 10, "becom": 10, "capabl": 10, "over": 10, "ha": 10, "bunch": 10, "learn": 10, "grow": 10, "comfort": 10, "hand": 10, "solv": 10, "qyearsbefore1990": 11, "0": 11}, "objects": {"RegexRiot": [[0, 0, 0, "-", "_basic_expressions"], [1, 0, 0, "-", "_riot"]], "RegexRiot._basic_expressions": [[0, 1, 1, "", "ALPHANUM"], [0, 1, 1, "", "ANYTHING"], [0, 1, 1, "", "BEGINING"], [0, 1, 1, "", "BOUNDARY"], [0, 1, 1, "", "CLOSE_PARENTHESIS"], [0, 1, 1, "", "DIGIT"], [0, 1, 1, "", "DOT"], [0, 1, 1, "", "END"], [0, 1, 1, "", "NON_ALPHANUM"], [0, 1, 1, "", "NON_BOUNDARY"], [0, 1, 1, "", "NON_DIGIT"], [0, 1, 1, "", "NON_SPACE"], [0, 1, 1, "", "OPEN_PARENTHESIS"], [0, 1, 1, "", "SPACE"]], "RegexRiot._riot": [[1, 2, 1, "", "RiotSet"], [1, 2, 1, "", "RiotString"], [1, 4, 1, "", "one_or_more"], [1, 4, 1, "", "riot"]], "RegexRiot._riot.RiotString": [[1, 3, 1, "", "compile"], [1, 3, 1, "", "one_or_more"], [1, 3, 1, "", "then"]], "tests": [[6, 0, 0, "-", "test_operations"], [7, 0, 0, "-", "test_regextutorials"], [8, 0, 0, "-", "test_symbols"]], "tests.test_operations": [[6, 2, 1, "", "RiotOperationsString"]], "tests.test_operations.RiotOperationsString": [[6, 3, 1, "", "test_one_or_more"], [6, 3, 1, "", "test_one_or_more_around_then"], [6, 3, 1, "", "test_then"]], "tests.test_regextutorials": [[7, 2, 1, "", "RegexTutorials"]], "tests.test_regextutorials.RegexTutorials": [[7, 3, 1, "", "test_Floating_point_numbers"], [7, 3, 1, "", "test_Hexadecimal_colors"], [7, 3, 1, "", "test_Years_before_1990"]], "tests.test_symbols": [[8, 2, 1, "", "LiteralsStringValueTests"]], "tests.test_symbols.LiteralsStringValueTests": [[8, 3, 1, "", "test_alphanum"], [8, 3, 1, "", "test_anything"], [8, 3, 1, "", "test_begining_and_end"], [8, 3, 1, "", "test_boundary"], [8, 3, 1, "", "test_custom_string"], [8, 3, 1, "", "test_digit"], [8, 3, 1, "", "test_dot"], [8, 3, 1, "", "test_round_parentheses"], [8, 3, 1, "", "test_space"]]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:class", "3": "py:method", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"]}, "titleterms": {"basic": [0, 10], "express": [0, 10], "riotstr": 1, "paramet": 1, "regexriot": [2, 4], "tree": 2, "devlog": 3, "v": 3, "0": 3, "3": 3, "2": 3, "1": 3, "instal": 4, "indic": 4, "tabl": 4, "test": 5, "set": 5, "oper": [6, 10], "regextutori": [7, 10], "symbol": 8, "float": 9, "point": 9, "number": 9, "try": 10, "out": 10, "interact": 10, "repl": 10, "chain": 10, "year": 11, "befor": 11, "1990": 11}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"Basic Expressions": [[0, "basic-expressions"], [10, "basic-expressions"]], "RiotString": [[1, "riotstring"]], "Parameters": [[1, "parameters"]], "RegexRiot": [[2, "regexriot"], [4, "regexriot"]], "Tree": [[2, "tree"]], "Devlog": [[3, "devlog"]], "V 0.0.3": [[3, "v-0-0-3"]], "V 0.0.2": [[3, "v-0-0-2"]], "V 0.0.1": [[3, "v-0-0-1"]], "Installation": [[4, "installation"]], "Indices and tables": [[4, "indices-and-tables"]], "Test sets": [[5, "test-sets"]], "Operations": [[6, "module-tests.test_operations"]], "RegexTutorials": [[7, "regextutorials"]], "Symbols": [[8, "module-tests.test_symbols"]], "Floating point numbers": [[9, "floating-point-numbers"]], "Try it out": [[10, "try-it-out"]], "Interactive Repl": [[10, "interactive-repl"]], "Chaining Operations": [[10, "chaining-operations"]], "REGEXTUTORIALS": [[10, "regextutorials"]], "Years before 1990": [[11, "years-before-1990"]]}, "indexentries": {"alphanum (in module regexriot._basic_expressions)": [[0, "RegexRiot._basic_expressions.ALPHANUM"]], "anything (in module regexriot._basic_expressions)": [[0, "RegexRiot._basic_expressions.ANYTHING"]], "begining (in module regexriot._basic_expressions)": [[0, "RegexRiot._basic_expressions.BEGINING"]], "boundary (in module regexriot._basic_expressions)": [[0, "RegexRiot._basic_expressions.BOUNDARY"]], "close_parenthesis (in module regexriot._basic_expressions)": [[0, "RegexRiot._basic_expressions.CLOSE_PARENTHESIS"]], "digit (in module regexriot._basic_expressions)": [[0, "RegexRiot._basic_expressions.DIGIT"]], "dot (in module regexriot._basic_expressions)": [[0, "RegexRiot._basic_expressions.DOT"]], "end (in module regexriot._basic_expressions)": [[0, "RegexRiot._basic_expressions.END"]], "non_alphanum (in module regexriot._basic_expressions)": [[0, "RegexRiot._basic_expressions.NON_ALPHANUM"]], "non_boundary (in module regexriot._basic_expressions)": [[0, "RegexRiot._basic_expressions.NON_BOUNDARY"]], "non_digit (in module regexriot._basic_expressions)": [[0, "RegexRiot._basic_expressions.NON_DIGIT"]], "non_space (in module regexriot._basic_expressions)": [[0, "RegexRiot._basic_expressions.NON_SPACE"]], "open_parenthesis (in module regexriot._basic_expressions)": [[0, "RegexRiot._basic_expressions.OPEN_PARENTHESIS"]], "regexriot._basic_expressions": [[0, "module-RegexRiot._basic_expressions"]], "space (in module regexriot._basic_expressions)": [[0, "RegexRiot._basic_expressions.SPACE"]], "module": [[0, "module-RegexRiot._basic_expressions"], [1, "module-RegexRiot._riot"], [6, "module-tests.test_operations"], [7, "module-tests.test_regextutorials"], [8, "module-tests.test_symbols"]], "regexriot._riot": [[1, "module-RegexRiot._riot"]], "riotset (class in regexriot._riot)": [[1, "RegexRiot._riot.RiotSet"]], "riotstring (class in regexriot._riot)": [[1, "RegexRiot._riot.RiotString"]], "compile() (regexriot._riot.riotstring method)": [[1, "RegexRiot._riot.RiotString.compile"]], "one_or_more() (regexriot._riot.riotstring method)": [[1, "RegexRiot._riot.RiotString.one_or_more"]], "one_or_more() (in module regexriot._riot)": [[1, "RegexRiot._riot.one_or_more"]], "riot() (in module regexriot._riot)": [[1, "RegexRiot._riot.riot"]], "then() (regexriot._riot.riotstring method)": [[1, "RegexRiot._riot.RiotString.then"]], "riotoperationsstring (class in tests.test_operations)": [[6, "tests.test_operations.RiotOperationsString"]], "test_one_or_more() (tests.test_operations.riotoperationsstring method)": [[6, "tests.test_operations.RiotOperationsString.test_one_or_more"]], "test_one_or_more_around_then() (tests.test_operations.riotoperationsstring method)": [[6, "tests.test_operations.RiotOperationsString.test_one_or_more_around_then"]], "test_then() (tests.test_operations.riotoperationsstring method)": [[6, "tests.test_operations.RiotOperationsString.test_then"]], "tests.test_operations": [[6, "module-tests.test_operations"]], "regextutorials (class in tests.test_regextutorials)": [[7, "tests.test_regextutorials.RegexTutorials"]], "test_floating_point_numbers() (tests.test_regextutorials.regextutorials method)": [[7, "tests.test_regextutorials.RegexTutorials.test_Floating_point_numbers"]], "test_hexadecimal_colors() (tests.test_regextutorials.regextutorials method)": [[7, "tests.test_regextutorials.RegexTutorials.test_Hexadecimal_colors"]], "test_years_before_1990() (tests.test_regextutorials.regextutorials method)": [[7, "tests.test_regextutorials.RegexTutorials.test_Years_before_1990"]], "tests.test_regextutorials": [[7, "module-tests.test_regextutorials"]], "literalsstringvaluetests (class in tests.test_symbols)": [[8, "tests.test_symbols.LiteralsStringValueTests"]], "test_alphanum() (tests.test_symbols.literalsstringvaluetests method)": [[8, "tests.test_symbols.LiteralsStringValueTests.test_alphanum"]], "test_anything() (tests.test_symbols.literalsstringvaluetests method)": [[8, "tests.test_symbols.LiteralsStringValueTests.test_anything"]], "test_begining_and_end() (tests.test_symbols.literalsstringvaluetests method)": [[8, "tests.test_symbols.LiteralsStringValueTests.test_begining_and_end"]], "test_boundary() (tests.test_symbols.literalsstringvaluetests method)": [[8, "tests.test_symbols.LiteralsStringValueTests.test_boundary"]], "test_custom_string() (tests.test_symbols.literalsstringvaluetests method)": [[8, "tests.test_symbols.LiteralsStringValueTests.test_custom_string"]], "test_digit() (tests.test_symbols.literalsstringvaluetests method)": [[8, "tests.test_symbols.LiteralsStringValueTests.test_digit"]], "test_dot() (tests.test_symbols.literalsstringvaluetests method)": [[8, "tests.test_symbols.LiteralsStringValueTests.test_dot"]], "test_round_parentheses() (tests.test_symbols.literalsstringvaluetests method)": [[8, "tests.test_symbols.LiteralsStringValueTests.test_round_parentheses"]], "test_space() (tests.test_symbols.literalsstringvaluetests method)": [[8, "tests.test_symbols.LiteralsStringValueTests.test_space"]], "tests.test_symbols": [[8, "module-tests.test_symbols"]]}})