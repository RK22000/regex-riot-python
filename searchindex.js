Search.setIndex({"docnames": ["index", "modules", "regex_riot_rk22000", "tests"], "filenames": ["index.rst", "modules.rst", "regex_riot_rk22000.rst", "tests.rst"], "titles": ["RegexRiot", "regex_riot_rk22000", "regex_riot_rk22000 package", "tests package"], "terms": {"A": 0, "simpl": 0, "easi": 0, "us": [0, 2], "read": [0, 2], "regex": [0, 2], "maker": 0, "see": 0, "its": 0, "effect": 0, "against": 0, "few": 0, "exercis": [0, 3], "index": [0, 3], "modul": [0, 1], "search": 0, "page": 0, "packag": 1, "submodul": 1, "riot": 1, "alphanum": [1, 2], "anyth": [1, 2], "boundari": [1, 2], "digit": [1, 2], "dot": [1, 2], "non_alphanum": [1, 2], "non_boundari": [1, 2], "non_digit": [1, 2], "non_spac": [1, 2], "riotstr": [1, 2, 3], "compil": [1, 2], "one_or_mor": [1, 2], "space": [1, 2], "content": 1, "test": 1, "test_oper": 1, "riotoperationsstr": [1, 3], "test_one_or_mor": [1, 3], "test_then": [1, 3], "test_regextutori": 1, "regextutori": [1, 3], "test_floating_point_numb": [1, 3], "test_hexadecimal_color": [1, 3], "test_symbol": 1, "literalsstringvaluetest": [1, 3], "test_alphanum": [1, 3], "test_anyth": [1, 3], "test_boundari": [1, 3], "test_custom_str": [1, 3], "test_digit": [1, 3], "test_dot": [1, 3], "test_spac": [1, 3], "thi": [2, 3], "i": [2, 3], "primari": 2, "librari": 2, "import": 2, "everyth": 2, "from": 2, "w": 2, "match": [2, 3], "ani": 2, "alphanumer": 2, "charact": 2, "b": 2, "posit": 2, "d": 2, "non": 2, "": [2, 3], "class": [2, 3], "combin": 2, "unit": 2, "base": [2, 3], "object": 2, "hold": 2, "mutat": 2, "regular": 2, "express": 2, "can": 2, "compos": 2, "togeth": 2, "build": 2, "more": 2, "complic": 2, "For": 2, "instanc": 2, "built": 2, "although": 2, "consic": 2, "write": 2, "itself": 2, "help": 2, "autocomplet": 2, "easier": 2, "chain": 2, "function": 2, "call": 2, "out": 2, "english": 2, "like": 2, "text": 2, "pattern": 2, "return": 2, "result": 2, "re": 2, "The": 2, "current": 2, "repeat": 2, "one": 2, "time": 2, "so": 2, "r": 2, "follow": 2, "next": 2, "ab": 2, "string": 2, "self": 2, "seed": 2, "simplifi": 2, "interfac": 2, "methodnam": 3, "runtest": 3, "testcas": 3, "These": 3, "check": 3, "ar": 3, "form": 3, "correctli": 3, "anoth": 3, "set": 3, "wheter": 3, "found": 3, "http": 3, "com": 3, "html": 3, "1": 3, "excercis": 3, "float": 3, "20point": 3, "20number": 3, "number": 3, "contain": 3, "point": 3, "skip": 3, "those": 3, "don": 3, "t": 3, "speed": 3, "light": 3, "vacuum": 3, "299792458": 3, "m": 3, "standard": 3, "atmospher": 3, "101325": 3, "pa": 3, "earth": 3, "sun": 3, "distanc": 3, "149600000": 3, "km": 3, "acceler": 3, "graviti": 3, "9": 3, "80665": 3, "2": 3, "circumfer": 3, "diamet": 3, "ratio": 3, "3": 3, "141592": 3, "ga": 3, "constant": 3, "8": 3, "3144621": 3, "j": 3, "mol": 3, "k": 3, "hexadecim": 3, "20color": 3, "24": 3, "bit": 3, "color": 3, "12": 3, "aliceblu": 3, "f0f8ff": 3, "antiquewhit": 3, "faebd7": 3, "aqua": 3, "00ffff": 3, "aquamarin": 3, "7fffd4": 3, "azur": 3, "f0ffff": 3, "white": 3, "fff": 3, "red": 3, "f00": 3, "green": 3, "0f0": 3, "blue": 3, "00f": 3}, "objects": {"": [[2, 0, 0, "-", "regex_riot_rk22000"], [3, 0, 0, "-", "tests"]], "regex_riot_rk22000": [[2, 0, 0, "-", "riot"]], "regex_riot_rk22000.riot": [[2, 1, 1, "", "ALPHANUM"], [2, 1, 1, "", "ANYTHING"], [2, 1, 1, "", "BOUNDARY"], [2, 1, 1, "", "DIGIT"], [2, 1, 1, "", "DOT"], [2, 1, 1, "", "NON_ALPHANUM"], [2, 1, 1, "", "NON_BOUNDARY"], [2, 1, 1, "", "NON_DIGIT"], [2, 1, 1, "", "NON_SPACE"], [2, 2, 1, "", "RiotString"], [2, 1, 1, "", "SPACE"], [2, 4, 1, "", "one_or_more"], [2, 4, 1, "", "riot"]], "regex_riot_rk22000.riot.RiotString": [[2, 3, 1, "", "compile"], [2, 3, 1, "", "one_or_more"], [2, 3, 1, "", "then"]], "tests": [[3, 0, 0, "-", "test_operations"], [3, 0, 0, "-", "test_regextutorials"], [3, 0, 0, "-", "test_symbols"]], "tests.test_operations": [[3, 2, 1, "", "RiotOperationsString"]], "tests.test_operations.RiotOperationsString": [[3, 3, 1, "", "test_one_or_more"], [3, 3, 1, "", "test_then"]], "tests.test_regextutorials": [[3, 2, 1, "", "RegexTutorials"]], "tests.test_regextutorials.RegexTutorials": [[3, 3, 1, "", "test_Floating_point_numbers"], [3, 3, 1, "", "test_Hexadecimal_colors"]], "tests.test_symbols": [[3, 2, 1, "", "LiteralsStringValueTests"]], "tests.test_symbols.LiteralsStringValueTests": [[3, 3, 1, "", "test_alphanum"], [3, 3, 1, "", "test_anything"], [3, 3, 1, "", "test_boundary"], [3, 3, 1, "", "test_custom_string"], [3, 3, 1, "", "test_digit"], [3, 3, 1, "", "test_dot"], [3, 3, 1, "", "test_space"]]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:class", "3": "py:method", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"]}, "titleterms": {"regexriot": 0, "indic": 0, "tabl": 0, "regex_riot_rk22000": [1, 2], "packag": [2, 3], "submodul": [2, 3], "riot": 2, "modul": [2, 3], "paramet": 2, "content": [2, 3], "test": 3, "test_oper": 3, "test_regextutori": 3, "test_symbol": 3}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"RegexRiot": [[0, "regexriot"]], "Indices and tables": [[0, "indices-and-tables"]], "regex_riot_rk22000": [[1, "regex-riot-rk22000"]], "regex_riot_rk22000 package": [[2, "regex-riot-rk22000-package"]], "Submodules": [[2, "submodules"], [3, "submodules"]], "regex_riot_rk22000.riot module": [[2, "module-regex_riot_rk22000.riot"]], "Parameters": [[2, "parameters"]], "Module contents": [[2, "module-regex_riot_rk22000"], [3, "module-tests"]], "tests package": [[3, "tests-package"]], "tests.test_operations module": [[3, "module-tests.test_operations"]], "tests.test_regextutorials module": [[3, "module-tests.test_regextutorials"]], "tests.test_symbols module": [[3, "module-tests.test_symbols"]]}, "indexentries": {"alphanum (in module regex_riot_rk22000.riot)": [[2, "regex_riot_rk22000.riot.ALPHANUM"]], "anything (in module regex_riot_rk22000.riot)": [[2, "regex_riot_rk22000.riot.ANYTHING"]], "boundary (in module regex_riot_rk22000.riot)": [[2, "regex_riot_rk22000.riot.BOUNDARY"]], "digit (in module regex_riot_rk22000.riot)": [[2, "regex_riot_rk22000.riot.DIGIT"]], "dot (in module regex_riot_rk22000.riot)": [[2, "regex_riot_rk22000.riot.DOT"]], "non_alphanum (in module regex_riot_rk22000.riot)": [[2, "regex_riot_rk22000.riot.NON_ALPHANUM"]], "non_boundary (in module regex_riot_rk22000.riot)": [[2, "regex_riot_rk22000.riot.NON_BOUNDARY"]], "non_digit (in module regex_riot_rk22000.riot)": [[2, "regex_riot_rk22000.riot.NON_DIGIT"]], "non_space (in module regex_riot_rk22000.riot)": [[2, "regex_riot_rk22000.riot.NON_SPACE"]], "riotstring (class in regex_riot_rk22000.riot)": [[2, "regex_riot_rk22000.riot.RiotString"]], "space (in module regex_riot_rk22000.riot)": [[2, "regex_riot_rk22000.riot.SPACE"]], "compile() (regex_riot_rk22000.riot.riotstring method)": [[2, "regex_riot_rk22000.riot.RiotString.compile"]], "module": [[2, "module-regex_riot_rk22000"], [2, "module-regex_riot_rk22000.riot"], [3, "module-tests"], [3, "module-tests.test_operations"], [3, "module-tests.test_regextutorials"], [3, "module-tests.test_symbols"]], "one_or_more() (in module regex_riot_rk22000.riot)": [[2, "regex_riot_rk22000.riot.one_or_more"]], "one_or_more() (regex_riot_rk22000.riot.riotstring method)": [[2, "regex_riot_rk22000.riot.RiotString.one_or_more"]], "regex_riot_rk22000": [[2, "module-regex_riot_rk22000"]], "regex_riot_rk22000.riot": [[2, "module-regex_riot_rk22000.riot"]], "riot() (in module regex_riot_rk22000.riot)": [[2, "regex_riot_rk22000.riot.riot"]], "then() (regex_riot_rk22000.riot.riotstring method)": [[2, "regex_riot_rk22000.riot.RiotString.then"]], "literalsstringvaluetests (class in tests.test_symbols)": [[3, "tests.test_symbols.LiteralsStringValueTests"]], "regextutorials (class in tests.test_regextutorials)": [[3, "tests.test_regextutorials.RegexTutorials"]], "riotoperationsstring (class in tests.test_operations)": [[3, "tests.test_operations.RiotOperationsString"]], "test_floating_point_numbers() (tests.test_regextutorials.regextutorials method)": [[3, "tests.test_regextutorials.RegexTutorials.test_Floating_point_numbers"]], "test_hexadecimal_colors() (tests.test_regextutorials.regextutorials method)": [[3, "tests.test_regextutorials.RegexTutorials.test_Hexadecimal_colors"]], "test_alphanum() (tests.test_symbols.literalsstringvaluetests method)": [[3, "tests.test_symbols.LiteralsStringValueTests.test_alphanum"]], "test_anything() (tests.test_symbols.literalsstringvaluetests method)": [[3, "tests.test_symbols.LiteralsStringValueTests.test_anything"]], "test_boundary() (tests.test_symbols.literalsstringvaluetests method)": [[3, "tests.test_symbols.LiteralsStringValueTests.test_boundary"]], "test_custom_string() (tests.test_symbols.literalsstringvaluetests method)": [[3, "tests.test_symbols.LiteralsStringValueTests.test_custom_string"]], "test_digit() (tests.test_symbols.literalsstringvaluetests method)": [[3, "tests.test_symbols.LiteralsStringValueTests.test_digit"]], "test_dot() (tests.test_symbols.literalsstringvaluetests method)": [[3, "tests.test_symbols.LiteralsStringValueTests.test_dot"]], "test_one_or_more() (tests.test_operations.riotoperationsstring method)": [[3, "tests.test_operations.RiotOperationsString.test_one_or_more"]], "test_space() (tests.test_symbols.literalsstringvaluetests method)": [[3, "tests.test_symbols.LiteralsStringValueTests.test_space"]], "test_then() (tests.test_operations.riotoperationsstring method)": [[3, "tests.test_operations.RiotOperationsString.test_then"]], "tests": [[3, "module-tests"]], "tests.test_operations": [[3, "module-tests.test_operations"]], "tests.test_regextutorials": [[3, "module-tests.test_regextutorials"]], "tests.test_symbols": [[3, "module-tests.test_symbols"]]}})